#!/usr/bin/env powershell
# Script pour v√©rifier la configuration APK

Write-Host "üîç V√©rification de la configuration APK/Android" -ForegroundColor Cyan
Write-Host "===============================================" -ForegroundColor Cyan

$allGood = $true
$details = @()

# V√©rifier Node.js
Write-Host "`nüìå Node.js & NPM" -ForegroundColor Yellow
try {
    $nodeVersion = & node --version 2>&1
    $npmVersion = & npm --version 2>&1
    Write-Host "‚úÖ Node.js: $nodeVersion" -ForegroundColor Green
    Write-Host "‚úÖ npm: $npmVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Node.js/npm NON TROUV√â" -ForegroundColor Red
    Write-Host "   T√©l√©charger depuis : https://nodejs.org/" -ForegroundColor Gray
    $allGood = $false
}

# V√©rifier Java
Write-Host "`nüìå Java (JDK)" -ForegroundColor Yellow
try {
    $javaVersion = & java -version 2>&1 | Select-Object -First 1
    Write-Host "‚úÖ Java: $javaVersion" -ForegroundColor Green
    
    # V√©rifier la version
    if ($javaVersion -match "11|17|21") {
        Write-Host "   ‚úÖ Version compatible" -ForegroundColor Green
    } else {
        Write-Host "   ‚ö†Ô∏è  Version non optimale (recommand√©: 17+)" -ForegroundColor Yellow
    }
} catch {
    Write-Host "‚ùå Java NON TROUV√â" -ForegroundColor Red
    Write-Host "   T√©l√©charger depuis : https://www.oracle.com/java/technologies/downloads/" -ForegroundColor Gray
    Write-Host "   Ou via Chocolatey : choco install openjdk17" -ForegroundColor Gray
    $allGood = $false
}

# V√©rifier Gradle
Write-Host "`nüìå Gradle" -ForegroundColor Yellow
$gradleExe = if ($PSVersionTable.Platform -eq "Win32NT") { 
    ".\android\gradlew.bat" 
} else { 
    "./android/gradlew" 
}

if (Test-Path $gradleExe) {
    Write-Host "‚úÖ Gradle (local): Trouv√© dans android/" -ForegroundColor Green
} else {
    try {
        $gradleVersion = & gradle --version 2>&1 | Select-Object -First 1
        Write-Host "‚úÖ Gradle (global): $gradleVersion" -ForegroundColor Green
    } catch {
        Write-Host "‚ùå Gradle NON TROUV√â" -ForegroundColor Red
        Write-Host "   Sera t√©l√©charg√© automatiquement lors du premier build" -ForegroundColor Gray
        Write-Host "   Ou installer : choco install gradle" -ForegroundColor Gray
    }
}

# V√©rifier Android SDK
Write-Host "`nüìå Android SDK" -ForegroundColor Yellow
$androidHome = $env:ANDROID_HOME
if (-not $androidHome) {
    Write-Host "‚ùå ANDROID_HOME NON CONFIGUR√â" -ForegroundColor Red
    Write-Host "   Ajouter la variable d'environnement :" -ForegroundColor Gray
    Write-Host "   ANDROID_HOME = C:\Users\[User]\AppData\Local\Android\Sdk" -ForegroundColor Gray
    $allGood = $false
} else {
    Write-Host "‚úÖ ANDROID_HOME: $androidHome" -ForegroundColor Green
    
    # V√©rifier si les outils existent
    if (Test-Path "$androidHome\platform-tools\adb.exe") {
        Write-Host "‚úÖ ADB (Android Debug Bridge): Trouv√©" -ForegroundColor Green
    } else {
        Write-Host "‚ö†Ô∏è  ADB non trouv√© - sera n√©cessaire pour installer sur appareil" -ForegroundColor Yellow
    }
}

# V√©rifier Java Home
Write-Host "`nüìå JAVA_HOME" -ForegroundColor Yellow
$javaHome = $env:JAVA_HOME
if (-not $javaHome) {
    Write-Host "‚ùå JAVA_HOME NON CONFIGUR√â" -ForegroundColor Red
    Write-Host "   Ajouter la variable d'environnement :" -ForegroundColor Gray
    Write-Host "   JAVA_HOME = C:\Program Files\Java\jdk-17.x.x" -ForegroundColor Gray
    $allGood = $false
} else {
    Write-Host "‚úÖ JAVA_HOME: $javaHome" -ForegroundColor Green
}

# V√©rifier les fichiers Capacitor
Write-Host "`nüìå Configuration Capacitor" -ForegroundColor Yellow
if (Test-Path ".\capacitor.config.ts") {
    Write-Host "‚úÖ capacitor.config.ts: Trouv√©" -ForegroundColor Green
} else {
    Write-Host "‚ùå capacitor.config.ts: MANQUANT" -ForegroundColor Red
    $allGood = $false
}

if (Test-Path ".\android") {
    Write-Host "‚úÖ Dossier android/: Cr√©√©" -ForegroundColor Green
} else {
    Write-Host "‚ö†Ô∏è  Dossier android/ non cr√©√© - sera cr√©√© au premier build" -ForegroundColor Yellow
}

# V√©rifier les d√©pendances npm
Write-Host "`nüìå D√©pendances NPM" -ForegroundColor Yellow
$packageJson = Get-Content package.json | ConvertFrom-Json
if ($packageJson.dependencies.'@capacitor/core') {
    Write-Host "‚úÖ @capacitor/core: Install√©" -ForegroundColor Green
} else {
    Write-Host "‚ùå Capacitor NPM packages NON INSTALL√âS" -ForegroundColor Red
    Write-Host "   Ex√©cuter : npm install" -ForegroundColor Gray
    $allGood = $false
}

# R√©sum√©
Write-Host "`n" -ForegroundColor Cyan
if ($allGood) {
    Write-Host "‚ú® TOUT EST CONFIGUR√â ! ‚ú®" -ForegroundColor Green
    Write-Host "`nüöÄ Vous pouvez maintenant g√©n√©rer l'APK :" -ForegroundColor Green
    Write-Host "   ‚Ä¢ Debug  : .\build-apk-debug.ps1" -ForegroundColor Cyan
    Write-Host "   ‚Ä¢ Release: .\build-apk-release.ps1" -ForegroundColor Cyan
} else {
    Write-Host "‚ö†Ô∏è  CONFIGURATION INCOMPL√àTE" -ForegroundColor Red
    Write-Host "`nüìñ Consultez GUIDE_APK.md pour l'installation des pr√©requis" -ForegroundColor Yellow
}

Write-Host "`nüìö Pour plus de d√©tails :" -ForegroundColor Gray
Write-Host "   ‚Ä¢ GUIDE_APK.md      - Guide complet" -ForegroundColor Gray
Write-Host "   ‚Ä¢ APK_README.md     - D√©marrage rapide" -ForegroundColor Gray
Write-Host "   ‚Ä¢ build-apk-*.ps1   - Scripts automation" -ForegroundColor Gray
